@model WebApp.ViewModels.HomeIndexViewModel

@{
    ViewData["Title"] = "Расписание";
    var selectedDate = Model.SelectedDate;
    var isSunday = selectedDate.DayOfWeek == DayOfWeek.Sunday;
    var workDayStart = isSunday ? 10 : 9;
    var workDayEnd = isSunday ? 16 : 19;
    var timeSlots = new List<string>();
    
    // Generate 15-minute intervals
    for (int hour = workDayStart; hour < workDayEnd; hour++)
    {
        for (int minute = 0; minute < 60; minute += 15)
        {
            timeSlots.Add($"{hour}:{minute:D2}");
        }
    }
}

<div class="schedule-container" style="display: flex; gap: 20px;">
    <!-- Calendar Section -->
    <div class="calendar-section" style="flex: 0 0 250px;">
        @{
            var monthsToShow = new[] { 
                DateTime.Today.AddMonths(-1), 
                DateTime.Today, 
                DateTime.Today.AddMonths(1) 
            };
        }
        
        @foreach (var month in monthsToShow)
        {
            <div class="month-calendar">
                <h5 class="month-title">@month.ToString("MMMM yyyy")</h5>
                
                <div class="weekdays-header">
                    <div>Пн</div><div>Вт</div><div>Ср</div><div>Чт</div>
                    <div>Пт</div><div>Сб</div><div>Вс</div>
                </div>
                
                <div class="days-grid">
                    @{
                        var firstDay = new DateTime(month.Year, month.Month, 1);
                        var startOffset = firstDay.DayOfWeek == DayOfWeek.Sunday ? 6 : (int)firstDay.DayOfWeek - 1;
                        var daysInMonth = DateTime.DaysInMonth(month.Year, month.Month);
                    }
                    
                    @for (int i = 0; i < startOffset; i++)
                    {
                        <div class="empty-day"></div>
                    }
                    
                    @for (int day = 1; day <= daysInMonth; day++)
                    {
                        var date = new DateTime(month.Year, month.Month, day);
                        <div class="day @(date.Date == selectedDate.Date ? "selected" : "")" 
                             data-date="@date.ToString("yyyy-MM-dd")">
                            @day
                        </div>
                    }
                </div>
            </div>
        }
    </div>
    
    <!-- Appointments Table Section -->
    <div class="appointments-table-container" style="flex: 1; position: relative; overflow: auto; height: 80vh;">
        <div class="appointments-table-wrapper">
            <table class="table">
                <colgroup>
                    <col style="width: 80px; position: sticky; left: 0; z-index: 10; background: white;">
                    @foreach (var master in Model.Masters)
                    {
                        <col style="width: 100px; max-width: 100px;">
                    }
                </colgroup>
                <thead>
                    <tr>
                        <th style="position: sticky; top: 0; left: 0; z-index: 20; background: #f8f9fa;">Время</th>
                        @foreach (var master in Model.Masters)
                        {
                            <th style="position: sticky; top: 0; z-index: 15; background: #f8f9fa; max-width: 100px; overflow: hidden; text-overflow: ellipsis;" title="@master.Name">@master.Name</th>
                        }
                    </tr>
                </thead>
                <tbody>
                    @{
                        var timeSlotIndex = 0;
                        var processedAppointments = new List<int>();
                    }
                    @while (timeSlotIndex < timeSlots.Count)
                    {
                        var timeSlot = timeSlots[timeSlotIndex];
                        var timeParts = timeSlot.Split(':');
                        var hour = int.Parse(timeParts[0]);
                        var minute = int.Parse(timeParts[1]);
                        var currentTime = new DateTime(selectedDate.Year, selectedDate.Month, selectedDate.Day, hour, minute, 0);
                        
                        <tr>
                            <td style="position: sticky; left: 0; z-index: 5; background: white;">@timeSlot</td>
                            @foreach (var master in Model.Masters)
                            {
                                var appointment = Model.Appointments.FirstOrDefault(a => 
                                    !processedAppointments.Contains(a.Id) &&
                                    a.IdMaster == master.Id && 
                                    a.StartTime == currentTime);
                                
                                if (appointment != null)
                                {
                                    var duration = appointment.Duration;
                                    var slotCount = (int)Math.Ceiling(duration / 15.0);
                                    var endTime = appointment.StartTime.AddMinutes(duration);
                                    
                                    <td rowspan="@slotCount" class="appointment-cell" style="max-width: 100px;">
                                        <div class="appointment-slot" style="white-space: normal;">
                                            <span style="display: block; overflow: hidden; text-overflow: ellipsis;" title="@appointment.VisitorName">@appointment.VisitorName</span>
                                            <span style="font-size: 0.8em;">@appointment.StartTime.ToString("HH:mm")-@endTime.ToString("HH:mm")</span>
                                        </div>
                                    </td>
                                    processedAppointments.Add(appointment.Id);
                                }
                                else if (!Model.Appointments.Any(a => 
                                    a.IdMaster == master.Id && 
                                    currentTime >= a.StartTime && 
                                    currentTime < a.StartTime.AddMinutes(a.Duration)))
                                {
                                    <td style="max-width: 100px;">
                                        <button class="book-appointment" 
                                                data-master-id="@master.Id" 
                                                data-time="@hour" 
                                                data-minute="@minute"
                                                style="width: 100%; max-width: 100px; overflow: hidden; text-overflow: ellipsis;">
                                            Забронировать
                                        </button>
                                    </td>
                                }
                            }
                        </tr>
                        timeSlotIndex++;
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

<style>
    .schedule-container {
        display: flex;
        gap: 20px;
    }
    
    .calendar-section {
        flex: 0 0 250px;
    }
    
    .appointments-table-container {
        flex: 1;
        position: relative;
        overflow: auto;
        height: 80vh;
    }
    
    .appointments-table-wrapper {
        position: relative;
    }
    
    .month-calendar {
        margin-bottom: 20px;
    }
    
    .month-title {
        text-align: center;
        margin: 0 0 10px 0;
        font-size: 16px;
    }
    
    .weekdays-header {
        display: grid;
        grid-template-columns: repeat(7, 1fr);
        text-align: center;
        font-weight: bold;
        margin-bottom: 5px;
    }
    
    .days-grid {
        display: grid;
        grid-template-columns: repeat(7, 1fr);
        gap: 5px;
    }
    
    .day, .empty-day {
        height: 30px;
        display: flex;
        align-items: center;
        justify-content: center;
        border-radius: 50%;
    }
    
    .day {
        cursor: pointer;
        transition: background 0.2s;
    }
    
    .day:hover {
        background: #e9ecef;
    }
    
    .day.selected {
        background: #0d6efd;
        color: white;
    }
    
    .table {
        width: auto;
        min-width: 100%;
        table-layout: fixed;
        border-collapse: collapse;
    }
    
    .table th, .table td {
        padding: 8px;
        border: 1px solid #dee2e6;
        text-align: center;
        height: 20px;
    }
    
    .table th {
        background-color: #f8f9fa;
    }
    
    .book-appointment {
        padding: 5px 10px;
        background-color: #28a745;
        color: white;
        border: none;
        border-radius: 4px;
        cursor: pointer;
        width: 100%;
        height: 100%;
        max-width: 100px;
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
    }
    
    .book-appointment:hover {
        background-color: #218838;
    }
    
    .appointment-cell {
        background-color: #d4edda;
        vertical-align: middle;
        max-width: 100px;
    }
    
    .appointment-slot {
        display: flex;
        flex-direction: column;
        justify-content: center;
        height: 100%;
        white-space: normal;
        word-break: break-word;
    }
</style>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Обработка выбора дня
        document.querySelectorAll('.day').forEach(day => {
            day.addEventListener('click', function() {
                const date = this.getAttribute('data-date');
                window.location.href = `?date=${date}`;
            });
        });
    });
</script>